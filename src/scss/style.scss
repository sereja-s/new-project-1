@use "sass:math";

@import "base/mixins";

// Подключаем шрифты=================================================================================================================
// Подключение кириллицы (добавить в конце строки):  &display=swap&subset=cyrillic-ext

@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700&display=swap");

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключить если есть файл иконочного шрифта
@import "fonts/icons";

// Шрифт по умолчанию
$fontFamily: "Montserrat";
$fontSize: 18px;

// ПЕРЕМЕННЫЕ:

// ====================================== Настройки в px: ========================================================================

// минимальная ширина страницы
$minWidth: 320;
// ширина полотна (макета)
$maxWidth: 1920;
// Ограничивающий контейнер (0-нет ограничения):
$maxWidthContainer: 1620; /* учли поля что-бы контент не прилипал к краям экрана (указаны в .container) Здесь: 15*2=30px */
$md1: $maxWidthContainer + 12;
$md2: 991.98;
$md3: 767.98;
$md4: 479.98;

$mainColor: #000; // Цвет шрифта по умолчанию
$mainDarkColor: #141414;
$mainAccentColor: #e8aa31;

//===================================================================================================================================

// ================================================ Настройки в относительных единицах: =============================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1590;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Ширина страбатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

//===============================================================================================================================

// обнуление Общие параметры
@import "base/null";
// стили попап (модальных окон)
@import "base/popup";

body {
	font-weight: 500;
	color: $mainColor;
	font-family: $fontFamily;
	font-size: $fontSize;
	// скролл заблокирован
	&.lock {
		overflow: hidden;
		touch-action: none;
	}
	// скролл заблокирован
	/* 	.lock & {
		overflow: hidden;
		touch-action: none;
	} */
}

// оболочка
.wrapper {
	width: 100%;
	min-height: 100%;
	overflow-y: auto;
	display: flex;
	flex-direction: column;

	// прижимаем footer
	> main {
		flex: 1 1 auto;
	}

	// фикс для слайдеров
	> * {
		min-width: 0;
	}
}

// основная сетка
.container {
	max-width: $maxWidthContainer + px;
	margin: 0 auto;
	padding: 0 15px; // поля, что бы содержимое контейнера не прилипало к краям
	//overflow: hidden;
	@media (max-width: 768px) {
		padding: 0 10px;
	}

	// @media (max-width: $md1+px) {
	// 	max-width: 970px;
	// }
	// @media (max-width: $md2+px) {
	// 	min-width: 750px;
	// }
	// @media (max-width: $md3+px) {
	// 	max-width: none;
	// 	padding: 0 10px;
	// }
}

// Ограничивающий контейнер (новый шаблон)===========================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

//***************************************** Готовые классы**********************************************

//Выводим значёк рос.рубль:
.rub::after {
	content: "₽";
}

// *********************************** Применение класса "ibg" для картинок (адаптив изображения): ********************************

.ibg {
	background-position: center;
	background-size: cover;
	background-repeat: no-repeat;
	/* position: relative; */
}

.ibg img {
	width: 0;
	height: 0;
	position: absolute;
	top: 0;
	left: 0;
	opacity: 0;
	visibility: hidden;
}

//************************************* стили клонированной картинки ***********************************************************

._flyImage._ibg {
	opacity: 1;
	position: fixed;
	z-index: 100;
	transition: all 1s ease 0s;
}

// Подключение базовых стилей шаблонов (заготовок) и вспомогательных классов

// подключение конкретных стилей
@import "base";

// подключение стилей общих элементов проекта
@import "common";

// подключение стилей отделльных блоков
@import "header";
@import "footer";

// подключение стилей отдельныз страниц
@import "home";
